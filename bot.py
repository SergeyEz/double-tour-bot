from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "8321023518:AAETz3u5vnF68mcB6Bm5AYCj-W4CuX4qp9c"  # ‚Üê –ó–ê–ú–ï–ù–ò–¢–¨!

# –°—Å—ã–ª–∫–∏
LINKS = {
    "site": "https://doubleride.ru",
    "inst": "https://www.instagram.com/double.community?igsh=dTY3bDU0ZWprdmg0",
    "vk": "https://vk.com/double.community",
    "tg_channel": "https://t.me/Doubleride",
    "corob": "https://vk.com/board88867",  # –ó–∞–ø–∏—Å—å –Ω–∞ –≤—ã–µ–∑–¥ –∫–æ—Ä–æ–±–æ–º
    "booking": "https://vk.com/im?sel=-88867",  # –ë—Ä–æ–Ω—å –∏ –≤–æ–ø—Ä–æ—Å—ã
    "kirovsk_info": "https://vk.com/@-88867-pro-tur-v-hibiny",
    "kirovsk_schedule": "https://vk.com/@-88867-raspisanie-gornolyzhnyh-turov-na-sezon-2021-22-vmeste-s-doub",
    "sheregesh_info": "https://vk.com/@-88867-gornolyzhnyi-tur-v-sheregesh-daty-ceny-programma-faq",
    "sheregesh_schedule": None,  # –ø–æ–∫–∞ –Ω–µ—Ç
}

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ===

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üåê –°–∞–π—Ç", url=LINKS["site"])],
        [InlineKeyboardButton("üì∏ Instagram", url=LINKS["inst"])],
        [InlineKeyboardButton("üí¨ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ", url=LINKS["vk"])],
        [InlineKeyboardButton("üì¢ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª", url=LINKS["tg_channel"])],
        [InlineKeyboardButton("üèÇ –ó–∞–ø–∏—Å—å –Ω–∞ –≤—ã–µ–∑–¥ –≤ –ö–æ—Ä–æ–±", url=LINKS["corob"])],
        [InlineKeyboardButton("üèî –¢—É—Ä—ã –≤ –≥–æ—Ä—ã", callback_data="mountain_tours")],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="start")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç *DOUBLE*!\n\n"
        "–í—ã–±–µ—Ä–∏, –∫—É–¥–∞ —Ö–æ—á–µ—à—å –ø–æ–ø–∞—Å—Ç—å:"
    )

    if update.message:
        # –ï—Å–ª–∏ –≤—ã–∑–≤–∞–Ω —á–µ—Ä–µ–∑ /start ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.message.reply_text(text, reply_markup=reply_markup, parse_mode="Markdown")
    elif update.callback_query:
        # –ï—Å–ª–∏ –≤—ã–∑–≤–∞–Ω —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.callback_query.edit_message_text(text, reply_markup=reply_markup, parse_mode="Markdown")


async def mountain_tours(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("üìç –ö–∏—Ä–æ–≤—Å–∫", callback_data="kirovsk")],
        [InlineKeyboardButton("üìç –®–µ—Ä–µ–≥–µ—à", callback_data="sheregesh")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="start")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        "üåç –í—ã–±–µ—Ä–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:",
        reply_markup=reply_markup
    )


async def kirovsk_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ –æ —Ç—É—Ä–µ", url=LINKS["kirovsk_info"])],
        [InlineKeyboardButton("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ/—Ü–µ–Ω—ã", url=LINKS["kirovsk_schedule"])],
        [InlineKeyboardButton("‚úÖ –ë—Ä–æ–Ω—å", url=LINKS["booking"])],
        [InlineKeyboardButton("‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã", url=LINKS["booking"])],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="start")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        "üìç *–¢—É—Ä –≤ –ö–∏—Ä–æ–≤—Å–∫*\n\n"
        "–ì–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π –∫—É—Ä–æ—Ä—Ç –•–∏–±–∏–Ω—ã, —Å–µ–≤–µ—Ä–Ω–æ–µ —Å–∏—è–Ω–∏–µ, —ç–∫—Å—Ç—Ä–∏–º –∏ –ø—Ä–∏—Ä–æ–¥–∞!",
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )


async def sheregesh_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ –æ —Ç—É—Ä–µ", url=LINKS["sheregesh_info"])],
        [InlineKeyboardButton("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ/—Ü–µ–Ω—ã", url=LINKS["sheregesh_schedule"] or "https://vk.com/double.community")],  # –µ—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî –ø–æ–¥—Å—Ç–∞–≤–∏–º –í–ö
        [InlineKeyboardButton("‚úÖ –ë—Ä–æ–Ω—å", url=LINKS["booking"])],
        [InlineKeyboardButton("‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã", url=LINKS["booking"])],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="start")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        "üî• *–¢—É—Ä –≤ –®–µ—Ä–µ–≥–µ—à*\n\n"
        "–°–∞–º—ã–π –∫—Ä—É—Ç–æ–π —Å–Ω–æ—É–±–æ—Ä–¥–∏—á–µ—Å–∫–∏–π –∫—É—Ä–æ—Ä—Ç –°–∏–±–∏—Ä–∏!",
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )


# === –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–ù–û–ü–û–ö ===
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data

    if data == "mountain_tours":
        await mountain_tours(update, context)
    elif data == "kirovsk":
        await kirovsk_menu(update, context)
    elif data == "sheregesh":
        await sheregesh_menu(update, context)
    elif data == "start":
        await start(update, context)


# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥...")
    app.run_polling()

if __name__ == "__main__":
    main()